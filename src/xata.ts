// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Account",
    checkConstraints: {},
    foreignKeys: {
      Account_userId_fkey: {
        name: "Account_userId_fkey",
        columns: ["userId"],
        referencedTable: "User",
        referencedColumns: ["id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "access_token",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "expires_at",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id_token",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "provider",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "providerAccountId",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "refresh_token",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "scope",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "session_state",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "token_type",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "type",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "userId",
        type: "link",
        link: { table: "User" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "Contract",
    checkConstraints: {},
    foreignKeys: {
      Contract_organizationId_fkey: {
        name: "Contract_organizationId_fkey",
        columns: ["organizationId"],
        referencedTable: "Organization",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "billingRate",
        type: "float",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "currency",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: "'USD'::text",
        comment: "",
      },
      {
        name: "documentUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "endDate",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "isRenewable",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "true",
        comment: "",
      },
      {
        name: "lastBillingDate",
        type: "timestamp(3) without time zone",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "nextBillingDate",
        type: "timestamp(3) without time zone",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "organizationId",
        type: "link",
        link: { table: "Organization" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "paymentFrequency",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "paymentTerms",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "renewalDate",
        type: "timestamp(3) without time zone",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "startDate",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: 'bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss."ContractStatus"',
        notNull: true,
        unique: false,
        defaultValue:
          "'Active'::bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss.\"ContractStatus\"",
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "Document",
    checkConstraints: {},
    foreignKeys: {
      Document_contractId_fkey: {
        name: "Document_contractId_fkey",
        columns: ["contractId"],
        referencedTable: "Contract",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
      Document_organizationId_fkey: {
        name: "Document_organizationId_fkey",
        columns: ["organizationId"],
        referencedTable: "Organization",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
      Document_previousVersionId_fkey: {
        name: "Document_previousVersionId_fkey",
        columns: ["previousVersionId"],
        referencedTable: "Document",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
      Document_uploadedById_fkey: {
        name: "Document_uploadedById_fkey",
        columns: ["uploadedById"],
        referencedTable: "User",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "contractId",
        type: "link",
        link: { table: "Contract" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "fileSize",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "fileType",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "isLatest",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "true",
        comment: "",
      },
      {
        name: "organizationId",
        type: "link",
        link: { table: "Organization" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "previousVersionId",
        type: "link",
        link: { table: "Document" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "title",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "type",
        type: 'bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss."DocumentType"',
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "uploadedById",
        type: "link",
        link: { table: "User" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "url",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "1",
        comment: "",
      },
    ],
  },
  {
    name: "Industry",
    checkConstraints: {},
    foreignKeys: {
      Industry_parentId_fkey: {
        name: "Industry_parentId_fkey",
        columns: ["parentId"],
        referencedTable: "Industry",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "code",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "parentId",
        type: "link",
        link: { table: "Industry" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "KPI",
    checkConstraints: {},
    foreignKeys: {
      KPI_contractId_fkey: {
        name: "KPI_contractId_fkey",
        columns: ["contractId"],
        referencedTable: "Contract",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
      KPI_organizationId_fkey: {
        name: "KPI_organizationId_fkey",
        columns: ["organizationId"],
        referencedTable: "Organization",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "contractId",
        type: "link",
        link: { table: "Contract" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "isActive",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "true",
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "organizationId",
        type: "link",
        link: { table: "Organization" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "type",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "unit",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "unitType",
        type: 'bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss."Unit"',
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "KPIAssignment",
    checkConstraints: {},
    foreignKeys: {
      KPIAssignment_contractId_fkey: {
        name: "KPIAssignment_contractId_fkey",
        columns: ["contractId"],
        referencedTable: "Contract",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
      KPIAssignment_kpiId_fkey: {
        name: "KPIAssignment_kpiId_fkey",
        columns: ["kpiId"],
        referencedTable: "KPI",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
      KPIAssignment_organizationId_fkey: {
        name: "KPIAssignment_organizationId_fkey",
        columns: ["organizationId"],
        referencedTable: "Organization",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "contractId",
        type: "link",
        link: { table: "Contract" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "endDate",
        type: "timestamp(3) without time zone",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "frequency",
        type: 'bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss."Frequency"',
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "kpiId",
        type: "link",
        link: { table: "KPI" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "notes",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "organizationId",
        type: "link",
        link: { table: "Organization" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "startDate",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: 'bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss."AssignmentStatus"',
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "targetValue",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "Organization",
    checkConstraints: {},
    foreignKeys: {
      Organization_industryId_fkey: {
        name: "Organization_industryId_fkey",
        columns: ["industryId"],
        referencedTable: "Industry",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "address",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "contactEmail",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "contactPerson",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "contactPhone",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "email",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "industryId",
        type: "link",
        link: { table: "Industry" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "notes",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "phone",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: 'bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss."OrgStatus"',
        notNull: true,
        unique: false,
        defaultValue:
          "'Active'::bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss.\"OrgStatus\"",
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "Permission",
    checkConstraints: {},
    foreignKeys: {},
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "Role",
    checkConstraints: {},
    foreignKeys: {},
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "RolePermission",
    checkConstraints: {},
    foreignKeys: {
      RolePermission_permissionId_fkey: {
        name: "RolePermission_permissionId_fkey",
        columns: ["permissionId"],
        referencedTable: "Permission",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
      RolePermission_roleId_fkey: {
        name: "RolePermission_roleId_fkey",
        columns: ["roleId"],
        referencedTable: "Role",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "permissionId",
        type: "link",
        link: { table: "Permission" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "roleId",
        type: "link",
        link: { table: "Role" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "Service",
    checkConstraints: {},
    foreignKeys: {
      Service_categoryId_fkey: {
        name: "Service_categoryId_fkey",
        columns: ["categoryId"],
        referencedTable: "ServiceCategory",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "categoryId",
        type: "link",
        link: { table: "ServiceCategory" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: 'bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss."ServiceStatus"',
        notNull: true,
        unique: false,
        defaultValue:
          "'Active'::bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss.\"ServiceStatus\"",
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "ServiceAssignment",
    checkConstraints: {},
    foreignKeys: {
      ServiceAssignment_contractId_fkey: {
        name: "ServiceAssignment_contractId_fkey",
        columns: ["contractId"],
        referencedTable: "Contract",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
      ServiceAssignment_organizationId_fkey: {
        name: "ServiceAssignment_organizationId_fkey",
        columns: ["organizationId"],
        referencedTable: "Organization",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
      ServiceAssignment_serviceId_fkey: {
        name: "ServiceAssignment_serviceId_fkey",
        columns: ["serviceId"],
        referencedTable: "Service",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "contractId",
        type: "link",
        link: { table: "Contract" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "endDate",
        type: "timestamp(3) without time zone",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "frequency",
        type: 'bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss."Frequency"',
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "organizationId",
        type: "link",
        link: { table: "Organization" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceId",
        type: "link",
        link: { table: "Service" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "startDate",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: 'bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss."AssignmentStatus"',
        notNull: true,
        unique: false,
        defaultValue:
          "'Pending'::bb_f7ehcnfied2k99ogdjm0nk8nfk_cdslss.\"AssignmentStatus\"",
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "ServiceCategory",
    checkConstraints: {},
    foreignKeys: {},
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "Session",
    checkConstraints: {},
    foreignKeys: {
      Session_userId_fkey: {
        name: "Session_userId_fkey",
        columns: ["userId"],
        referencedTable: "User",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "expires",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "sessionToken",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "userId",
        type: "link",
        link: { table: "User" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "User",
    checkConstraints: {},
    foreignKeys: {},
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "createdAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "email",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "emailVerified",
        type: "timestamp(3) without time zone",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "image",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "updatedAt",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "UserRole",
    checkConstraints: {},
    foreignKeys: {
      UserRole_roleId_fkey: {
        name: "UserRole_roleId_fkey",
        columns: ["roleId"],
        referencedTable: "Role",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
      UserRole_userId_fkey: {
        name: "UserRole_userId_fkey",
        columns: ["userId"],
        referencedTable: "User",
        referencedColumns: ["id"],
        onDelete: "RESTRICT",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "roleId",
        type: "link",
        link: { table: "Role" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "userId",
        type: "link",
        link: { table: "User" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "VerificationToken",
    checkConstraints: {},
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {},
    columns: [
      {
        name: "expires",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "identifier",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "token",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "audit_logs",
    checkConstraints: {},
    foreignKeys: {
      audit_logs_userId_fkey: {
        name: "audit_logs_userId_fkey",
        columns: ["userId"],
        referencedTable: "User",
        referencedColumns: ["id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "action",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "data",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "timestamp",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: "CURRENT_TIMESTAMP",
        comment: "",
      },
      {
        name: "userId",
        type: "link",
        link: { table: "User" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Account = InferredTypes["Account"];
export type AccountRecord = Account & XataRecord;

export type Contract = InferredTypes["Contract"];
export type ContractRecord = Contract & XataRecord;

export type Document = InferredTypes["Document"];
export type DocumentRecord = Document & XataRecord;

export type Industry = InferredTypes["Industry"];
export type IndustryRecord = Industry & XataRecord;

export type Kpi = InferredTypes["KPI"];
export type KpiRecord = Kpi & XataRecord;

export type KPIAssignment = InferredTypes["KPIAssignment"];
export type KPIAssignmentRecord = KPIAssignment & XataRecord;

export type Organization = InferredTypes["Organization"];
export type OrganizationRecord = Organization & XataRecord;

export type Permission = InferredTypes["Permission"];
export type PermissionRecord = Permission & XataRecord;

export type Role = InferredTypes["Role"];
export type RoleRecord = Role & XataRecord;

export type RolePermission = InferredTypes["RolePermission"];
export type RolePermissionRecord = RolePermission & XataRecord;

export type Service = InferredTypes["Service"];
export type ServiceRecord = Service & XataRecord;

export type ServiceAssignment = InferredTypes["ServiceAssignment"];
export type ServiceAssignmentRecord = ServiceAssignment & XataRecord;

export type ServiceCategory = InferredTypes["ServiceCategory"];
export type ServiceCategoryRecord = ServiceCategory & XataRecord;

export type Session = InferredTypes["Session"];
export type SessionRecord = Session & XataRecord;

export type User = InferredTypes["User"];
export type UserRecord = User & XataRecord;

export type UserRole = InferredTypes["UserRole"];
export type UserRoleRecord = UserRole & XataRecord;

export type VerificationToken = InferredTypes["VerificationToken"];
export type VerificationTokenRecord = VerificationToken & XataRecord;

export type AuditLogs = InferredTypes["audit_logs"];
export type AuditLogsRecord = AuditLogs & XataRecord;

export type DatabaseSchema = {
  Account: AccountRecord;
  Contract: ContractRecord;
  Document: DocumentRecord;
  Industry: IndustryRecord;
  KPI: KpiRecord;
  KPIAssignment: KPIAssignmentRecord;
  Organization: OrganizationRecord;
  Permission: PermissionRecord;
  Role: RoleRecord;
  RolePermission: RolePermissionRecord;
  Service: ServiceRecord;
  ServiceAssignment: ServiceAssignmentRecord;
  ServiceCategory: ServiceCategoryRecord;
  Session: SessionRecord;
  User: UserRecord;
  UserRole: UserRoleRecord;
  VerificationToken: VerificationTokenRecord;
  audit_logs: AuditLogsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://Piira-s-workspace-cdslss.eu-central-1.xata.sh/db/axis",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
